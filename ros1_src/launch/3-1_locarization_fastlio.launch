<launch>
    <!-- 条件付きTFパブリッシャーノードを起動 -->
    <node pkg="tc2025" type="conditional_tf_publisher.py" name="conditional_tf_publisher" output="screen">
		<param name="odom_topic" value="/Odometry" />
	</node>

	<!-- Launch file for Livox AVIA LiDAR -->
	<rosparam command="load" file="$(find tc2025)/config/tc2024_mid_local.yaml" />

	<param name="feature_extract_enable" type="bool" value="0"/>
	<param name="point_filter_num" type="int" value="3"/>
	<param name="max_iteration" type="int" value="2" />
	<param name="filter_size_surf" type="double" value="0.5" />
	<param name="filter_size_map" type="double" value="0.5" />
	<param name="cube_side_length" type="double" value="1000" />
	<param name="runtime_pos_log_enable" type="bool" value="0" />
    <node pkg="fast_lio" type="fastlio_mapping" name="laserMapping" output="screen" />
	<!--param name="use_sim_time" value="true"/-->
	<node pkg="tf" type="static_transform_publisher" name="tf_base2mid360_new2" args="0 0 1.005 0 0 0 /base_link /mid360_frame_new 50" />
	<!--node pkg="tf" type="static_transform_publisher" name="tf_base2mid360_new2" args="-0.425 0 1.005 0 0 0 /base_link /mid360_frame_new 50" /-->
	<!--node pkg="tf" type="static_transform_publisher" name="body2base_link" args="0 0 0 0 0 0 /body /base_link 50" /-->
	<!--node pkg="tf" type="static_transform_publisher" name="odom2camera_init" args="0 0 0 0 0 0 /odom /camera_init 50" /-->

	<rosparam param="footprint" ns="/move_base/local_costmap">[[0.05,-0.1], [0.05,0.1], [-0.3,0.1], [-0.3,-0.1]]</rosparam>
	<rosparam param="footprint" ns="/move_base/global_costmap">[[0.05,-0.1], [0.05,0.1], [-0.3,0.1], [-0.3,-0.1]]</rosparam>
	<arg name="waypoint_file" default="$(find fast_lio)/PCD/waypoint.csv" />
	<arg name="map_file_move" default="$(find fast_lio)/PCD/scans_cleaned_2d.yaml" />
	<arg name="pcd_file" default="$(find fast_lio)/PCD/scans_light.pcd" />
	<node respawn="true" name="map_server_move" pkg="map_server" type="map_server" args="$(arg map_file_move)">
			<remap from="map" to="/map"/>
	</node>

  	<arg name="scan_topic"     default="scan_multi"/>
    <arg name="initial_pose_x" default="0.0"/>
    <arg name="initial_pose_y" default="0.0"/>
    <arg name="initial_pose_a" default="0.0"/>


	<arg name="without_odom" default="false" />
	<arg name="without_imu" default="false" />
	<arg name="use_neonavigation" default="false" />
	<arg name="use_pointcloud_map" default="true" />
	<arg name="use_cad_map" default="false" if="$(arg use_pointcloud_map)" />
	<arg name="use_cad_map" default="true" unless="$(arg use_pointcloud_map)" />
	<arg name="map_objs" unless="$(arg use_pointcloud_map)" />
	<arg name="map_pcd" default="$(arg pcd_file)" />
	<arg name="map_scale" default="1.0" />
	<arg name="map_offset_x" default="0.0" />
	<arg name="map_offset_y" default="0.0" />
	<arg name="generate_test_bag" default="false" />
	<arg name="use_bag_file" default="false" />
	<arg name="bag_file" if="$(arg use_bag_file)" />

	<param name="/use_sim_time" value="true" if="$(arg use_bag_file)" />
	<node pkg="rosbag" type="play" name="playback" args="--clock $(arg bag_file)"
	  if="$(arg use_bag_file)">
	    <remap from="odom" to="odom_unused" if="$(arg without_odom)" />
	    <remap from="imu/data" to="imu/data_unused" if="$(arg without_imu)" />
	</node>

	  <arg name="config_file" default="$(find tc2025)/config/config_localization.yaml" />
	  <rosparam command="load" file="$(arg config_file)"/>

	  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find tc2025)/config/mcl_3dl.rviz" />
	  <node pkg="mcl_3dl" type="mcl_3dl" name="mcl_3dl" output="screen" unless="$(arg generate_test_bag)">
	    <param name="compatible" value="1" />
	    <remap from="/imu/data" to="/mid360/livox/imu_new" />
	    <remap from="/odom" to="/Odometry" />
	    <!--remap from="/cloud" to="/mid360/livox/lidar" /-->
		<!--remap from="/cloud" to="/velodyne_points" /-->
		<remap from="/cloud" to="/merged_points" />
	  </node>
	  
	  <node pkg="obj_to_pointcloud" type="obj_to_pointcloud" name="obj_to_pointcloud"
	      if="$(arg use_cad_map)">
	    <param name="objs" value="$(arg map_objs)" />
	    <param name="offset_x" value="$(arg map_offset_x)" />
	    <param name="offset_y" value="$(arg map_offset_y)" />
	    <param name="scale" value="$(arg map_scale)" />
	    <remap from="~/cloud" to="mapcloud" />
	  </node>
	  <node pkg="pcl_ros" type="pcd_to_pointcloud" name="pcd_to_pointcloud"
	      args="$(arg map_pcd)" if="$(arg use_pointcloud_map)">
	    <remap from="cloud_pcd" to="mapcloud" />
	  </node>

	  <node pkg="trajectory_tracker" type="trajectory_recorder" name="path_recorder"
	      if="$(arg use_neonavigation)">
	    <param name="dist_interval" value="0.1" />
	    <param name="ang_interval" value="0.2" />
	  </node>
	  <node pkg="trajectory_tracker" type="trajectory_recorder" name="poses_ref"
	      if="$(arg use_neonavigation)">
	    <param name="dist_interval" value="0.5" />
	    <param name="ang_interval" value="100.0" />
	  </node>

	<node pkg="move_base" type="move_base" respawn="false" name="move_base">
		<rosparam file="$(find tc2025)/config/move_base.yaml" command="load" />
		<rosparam file="$(find tc2025)/config/costmap_common.yaml" command="load" ns="global_costmap" />
		<rosparam file="$(find tc2025)/config/costmap_common.yaml" command="load" ns="local_costmap" />
		<rosparam file="$(find tc2025)/config/costmap_local.yaml" command="load" />
		<rosparam file="$(find tc2025)/config/costmap_global.yaml" command="load" />
		<rosparam file="$(find tc2025)/config/planner_local.yaml" command="load" />
		<rosparam file="$(find tc2025)/config/planner_global.yaml" command="load" />
		<remap from="cmd_vel" to="ypspur_ros/cmd_vel_move" />
    	<remap from="odom" to="ypspur_ros/odom" />
		<!--remap from="map" to="map_move" /-->
	</node>


	<!--node pkg="tc2025" name="waypoint_manager" type="waypoint_manager.py">
		<param name="start_num"	value="0"/>
		<param name="waypoint"             value="$(arg waypoint_file)"/>
	</node-->

	<node pkg="tc2025" name="waypoint_map_view" type="waypoint_map_view.py">
		<param name="waypoint"             value="$(arg waypoint_file)"/>
  </node>

	<node pkg="tc2025" name="base_link_zero_broadcaster" type="base_link_zero_broadcaster.py">
		<param name="waypoint"             value="$(arg waypoint_file)"/>
	</node>
	<!--clear_costmaps_client ノードの起動 -->
	<node pkg="tc2025" name="clear_localmap" type="clear_localmap.py">
			<param name="clear_interval_sec" value="1" />
	</node>

	<!--Lidarデータの統合スクリプトを起動 -->
	<node pkg="tc2025" name="marge_lidar_data" type="marge_lidar_data.py">
	</node>

</launch>
